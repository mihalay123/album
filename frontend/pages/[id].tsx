import { NextPage } from 'next';
import Image from 'next/image';
import Head from 'next/head';
import { deleteImage, getAllImageId, getImageById } from '../src/api/images';

import { ImageType } from '.';
import styles from '../styles/Post.module.scss';
import Button from '../src/uikit/Button';
import { useRouter } from 'next/router';

interface Props {
  image: ImageType;
}

const Post: NextPage<Props> = ({ image }) => {
  const { title, url, description, createdAt, id } = image;

  const router = useRouter();

  const date = new Date(createdAt);

  const handleDelete = async () => {
    await deleteImage(id);
    router.push('/');
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.container}>
          <div className={styles.header}>
            <h3>{title}</h3>
            <Button onClick={handleDelete} label="delete" />
          </div>
          <div className={styles.image}>
            <div>
              <Image src={url} layout="fill" objectFit="cover" />
            </div>
          </div>
          <p>{`Post created: ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`}</p>
          {description && <p>Description: {description}</p>}
        </div>
      </main>
    </div>
  );
};

export default Post;

export async function getStaticPaths() {
  let ids = [Number];
  await getAllImageId().then((response) => (ids = response));
  const paths = ids.map((id) => ({
    params: {
      id: id.toString()
    }
  }));
  return {
    paths,
    fallback: false
  };
}

export async function getStaticProps({ params }: any) {
  let image: ImageType | {} = {};
  await getImageById(params.id).then((response) => (image = response));
  return { props: { image } };
}
